{"version":3,"sources":["assets/images/Symbol.svg","components/Header.js","components/BoardInput.js","components/Board.js","components/BoardList.js","page/Main.js","components/MypageInfo.js","page/Mypage.js","components/Signin/SignInInput.js","assets/images/Logo.svg","components/Signin/SignInButton.js","page/Signin.js","components/Signup/SignUpInput.js","components/Signup/SignUpButton.js","page/Signup.js","components/Footer.js","App.js","index.js"],"names":["StyledHeader","styled","header","Header","isLogedIn","isLogedInhandler","history","useHistory","useState","show","setShow","className","to","src","Symbol","alt","onMouseLeave","onMouseEnter","JSON","parse","localStorage","getItem","image","nickname","onClick","removeItem","replace","alert","NewTweetWrap","div","ImgNickWrap","Nickname","SubmitBtn","button","TextWrap","TextButtonWrap","BoardInput","setBoardListData","newInputValue","setNewInputValue","newInputInfo","config","headers","Authorization","token","undefined","config2","submitBtnHandler","axios","post","content","then","res","console","log","get","data","catch","err","Math","floor","random","type","value","onChange","e","target","maxLength","disabled","placeholder","BoardWrap","ContentWrap","BtnWrap","Content","CreatedAt","Board","board","updatedAt","setUpdatedAt","editable","setEditable","editValue","setEditValue","canUSeeMe","setCanUSeeMe","split","year","month","day","hour","min","createdAt","year2","month2","day2","hour2","min2","user","_id","put","date","getMonth","getDate","getHours","minute","getMinutes","second","getSeconds","getFullYear","dateFormat","Date","size","delete","BoardListWrap","BoardList","boardListData","length","map","Main","useEffect","InfoWrap","ContentBox","ImgWrap","Img","img","CloseBtn","ReSignBtn","CancelBtn","IsValidNick","visibility","IsValidNick2","MypageInfo","reSignIsOpen","setReSignIsOpen","editIsOpen","setEditIsOpen","editNewNickname","setEditNewNickname","validNickname","setValidNickname","isExistNickname","setIsExistNickname","selectImg","setSelectImg","reSignModalhandler","editModalhandler","selectImgHanlder","dataset","name","isOpen","onRequestClose","ariaHideApp","contentLabel","style","overlay","position","top","left","backgroundColor","display","justifyContent","alignItems","width","height","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","inset","Array","fill","v","i","el","test","setItem","stringify","window","location","reload","Mypage","myBoardListData","setMyBoardListData","authorization","InputWrap","SignInInput","signInInputInfo","setSignInInputInfo","InputuserInfo","email","password","htmlFor","id","SignInBtn","SignUpBtn","ValidText","SignInButton","displayValidText","setDisplayValidText","userInfo","SigninContainer","LogoImg","SigninWrap","PrevBtn","Signin","Logo","SignUpInput","signUpInputInfo","setSignUpInputInfo","signUpValid","setSignUpValid","pwdExp","emailExp","nicknameExp","checkEmailDupli","setCheckEmailDupli","checkNickNameDupli","setCheckNickNameDupli","passwordCheck","SignUpButton","signUpAllCheck","payload","SignupContainer","SignupWrap","Signup","setSignUpAllCheck","Object","entries","flat","every","FooterWrap","footer","Footer","App","setIsLogedIn","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95130060.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Symbol.75c16968.svg\";","import { Link } from 'react-router-dom'\n// import { Nav, , NavDropdown, Container, Navbar } from 'react-bootstrap'\n// import { LinkContainer } from 'react-router-bootstrap';\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport Symbol from '../assets/images/Symbol.svg';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledHeader = styled.header`\n  height: 10vh;\n  padding: 0 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > .profile {\n    height: 4vh;\n    line-height: 4vh;\n    margin-right: 18vw;\n  }\n  img {\n    height: 8vh;\n  }\n  .test {\n    margin-left: 18vw;\n  }\n  .userinfo {\n    font-size: 1.2rem;\n    font-weight: bold;\n    position: relative;\n  }\n  .profile_img {\n    margin-right: 1rem;\n    height: 5vh;\n    border: 1px solid #eee;\n    border-radius: 50%;\n  }\n\n  ul {\n    width: 100%;\n    padding-top: 6vh;\n    font-size: 1rem;\n    font-weight: normal;\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n\n  li {\n    text-align: center;\n    line-height: 2;\n    background: rgba(255, 255, 255, 0.8);\n    border: 1px solid #eee;\n    cursor: pointer;\n  }\n  li:first-child {\n    border-bottom: none;\n  }\n  li:hover {\n    background: #eee;\n  }\n`\n\nexport default function Header({ isLogedIn, isLogedInhandler }) {\n\n  const history = useHistory();\n\n  const [show, setShow] = useState(false);\n  const showDropdown = () => {\n    setShow(!show);\n  }\n  const hideDropdown = () => {\n    setShow(false);\n  }\n\n  const logOutHandler = () => {\n    // 로그아웃 -> localStorage 삭제\n    localStorage.removeItem('userInfo');\n    isLogedInhandler();\n    history.replace('/')\n    alert(\"로그아웃이 완료되었습니다.\")\n  }\n\n  // 프로필 이미지(api 랜덤이미지), 닉네임\n  // hover => drop down 기능 구현\n  // Advanced: dropdown icon 삽입\n  return <StyledHeader className=\"header\">\n    <div>\n      <Link to='/' className=\"logo test\"><img src={Symbol} alt=\"Symbol\" /></Link>\n    </div>\n    <div className=\"profile\" onMouseLeave={hideDropdown} show={show ? 1 : 0}\n      onMouseEnter={showDropdown}>\n      <div className=\"userinfo\">\n        {isLogedIn\n          ? <div>\n              <img className=\"profile_img\" src={JSON.parse(localStorage.getItem('userInfo')).image} alt=\"프로필 이미지\" />\n              {JSON.parse(localStorage.getItem('userInfo')).nickname}\n            </div>\n          : <Link to='/signin'>Sign in</Link>\n        }\n        {isLogedIn && show ?\n          <ul>\n            <li><Link to=\"/mypage\">MyPage</Link></li>\n            <li><Link to='/' onClick={logOutHandler}>LogOut</Link></li>\n          </ul>\n          : null}\n      </div>\n    </div>\n  </StyledHeader>\n};","import { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\n\nconst NewTweetWrap = styled.div`\n  height: 20vh;\n  margin: 2rem 2rem 0;\n  padding: 1.5rem;\n  text-align: left;\n  align-items: center;\n  background: #fff;\n  border-radius: 0.4rem;\n  box-shadow: 0 0 0.4rem 0.2rem #eee;\n  display: flex;\n  flex-direction : row;\n  width: 60vw;\n  \n  img {\n    width: 6.2rem;\n    height: 6.2rem;\n    border: 1px solid #eee;\n    border-radius: 50%;\n  }\n\n  textarea {\n    margin-top: 1rem;;\n    height: 12vh;\n    resize: none;\n    line-height: 1.2;\n    border: 1px solid #e6e6e6;\n    width: 45vw;\n    /* flex: 7 0 0; */\n  }\n  \n  textarea:focus {\n    outline: 1px solid #EDC51E;\n  }\n  textarea::placeholder {\n    color :  #cccccc;\n    font-style: italic;\n  }\n`\nconst ImgNickWrap = styled.div`\n  margin : 0 1rem 0 1rem;\n  flex: 1.5;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Nickname = styled.div`\n  height: 100%;\n  margin: 0rem;\n  font-weight: bold;\n  /* flex: 1 0 0; */\n  text-align: center;\n  margin-top: 0.5rem;\n`\nconst SubmitBtn = styled.button`\n  height: 3vh;\n  width: 4vw;\n  /* margin-left: 1rem; */\n  padding: 0.2rem;\n  font-weight: bold;\n  color: #fff;\n  background: #387099;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  /* flex: 2 0 0; */\n\n  &:hover {\n    background: #EDC51E;\n  }\n  &:disabled {\n    background: #aaa;\n  }\n`\n\nconst TextWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* align-items: row; */\n  /* align-items: flex-end; */\n  flex : 8.5;\n  `\nconst TextButtonWrap = styled.div`\n  display:flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-left: 1.5rem;\n  margin-right: 3rem;\n  margin-top: 0.5rem;\n`\n\nexport default function BoardInput({ isLogedIn, setBoardListData }) {\n\n  const [newInputValue, setNewInputValue] = useState('')\n\n  const newInputValueHandler = (e) => {\n    setNewInputValue(e.target.value)\n  }\n\n  const newInputInfo = JSON.parse(localStorage.getItem('userInfo'))\n\n  const config = {\n    headers: {\n      Authorization: isLogedIn ? `Bearer ${newInputInfo.token}` : undefined,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const config2 = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const submitBtnHandler = () => {\n    //axios post 요청 (_id(localstorage userInfo._id)), 토큰(header), newInputValue 전송)\n    //서버에서 외부에서 못들어오도록 막아서 이거 할때 토큰도 같이 보내야 함.\n    if (newInputValue !== '') {\n      axios.post('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/posts/new', { content: newInputValue }, config)\n        .then(res => {\n          console.log(\"잘되었어요\")\n          setNewInputValue('')\n          // 여기서 Main 상태변경을 알려줘야 함.\n          // setCreateInputState(!createInputState)\n          axios.get('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/posts', config2)\n            .then(res => {\n              setBoardListData([...res.data])\n            })\n            .catch(err => {\n              console.log(err)\n            })\n        }).catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\nreturn (\n  <NewTweetWrap>\n    <ImgNickWrap><img src={isLogedIn ? JSON.parse(localStorage.getItem('userInfo')).image : `/images/users/${Math.floor(Math.random() * 8) + 1}.jpeg`} alt=\"프로필 이미지\" />\n        <Nickname >{isLogedIn ? JSON.parse(localStorage.getItem('userInfo')).nickname : <Link to='/signin'>로그인을 해주세요</Link>}</Nickname>\n    </ImgNickWrap>\n    <TextWrap>{isLogedIn\n      ? <TextButtonWrap><textarea type=\"text\" value={newInputValue} onChange={newInputValueHandler} maxLength={255} /><SubmitBtn disabled={isLogedIn ? false : true} onClick={submitBtnHandler}>Submit</SubmitBtn></TextButtonWrap>\n      : <TextButtonWrap><textarea type=\"text\" value=\"\" disabled placeholder=\"로그인 후 작성 가능합니다.\" /><SubmitBtn disabled={isLogedIn ? false : true} onClick={submitBtnHandler}>Submit</SubmitBtn></TextButtonWrap>}\n    </TextWrap>\n  </NewTweetWrap>\n  )\n};","import { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { FaEdit, FaTrashAlt, FaCheckCircle } from 'react-icons/fa';\n\nconst BoardWrap = styled.div`\n  height: 16vh;\n  margin: 2rem 2rem 0;\n  padding: 1.5rem;\n  text-align: left;\n  align-items: center;\n  background: #fff;\n  border-radius: 0.4rem;\n  box-shadow: 0 0 0.4rem 0.2rem #eee;\n  display: flex;\n  flex-direction : row;\n  position: relative;\n  width: 60vw;\n\n  &.delete {\n    display: none;\n  }\n  \n  img {\n    width: 5rem;\n    height: 5rem;\n    border: 1px solid #eee;\n    border-radius: 50%;\n  }\n\n  textarea {\n    height: 10vh;\n    resize: none;\n    margin-left: 1rem;\n    padding: 0;\n    border: 1px solid #EDC51E;\n  }\n  \n  textarea:focus {\n    outline: 1px solid #EDC51E;\n  }\n\n  button {\n    font-size: 1.2rem;\n    color: #387099;\n    margin-left: 0.5rem;\n    background: none;\n  }\n  button:hover {\n    color: #EDC51E;\n  }\n`\nconst ImgNickWrap = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst ContentWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n  overflow: auto;\n  word-wrap: break-word;\n  `\nconst BtnWrap = styled.div`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n`\nconst Nickname = styled.div`\n  height: 100%;\n  margin: 0 1rem;\n  font-weight: bold;\n  flex: 1 0 0;\n`\nconst Content = styled.div`\n  height: 10vh;\n  margin-left: 1rem;\n  width: 46vw;\n`\nconst CreatedAt = styled.div`\n  font-size: 0.8rem;\n  letter-spacing: 0.05rem;\n  color: #CBCBCB;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n`\n\nexport default function Board({ isLogedIn, board }) {\n  const [updatedAt, setUpdatedAt] = useState(board.updatedAt)\n  const [editable, setEditable] = useState(false);\n  const [editValue, setEditValue] = useState(board.content);\n  const [canUSeeMe, setCanUSeeMe] = useState(true);\n  //포스트 정보다 가져오기 API : /api/posts\n\n  const [year, month, day] = updatedAt.split('-');\n  const hour = day.split('T')[1].split(':')[0]\n  const min = day.split('T')[1].split(':')[1]\n  \n  const [year2, month2, day2] = board.createdAt.split('-');\n  const hour2 = day2.split('T')[1].split(':')[0]\n  const min2 = day2.split('T')[1].split(':')[1]\n\n  const editHandler = () => {\n    setEditable(!editable)\n  }\n  const editValueHandler = (e) => {\n    setEditValue(e.target.value);\n  }\n  \n  const newInputInfo = JSON.parse(localStorage.getItem('userInfo'))\n\n  const config = {\n    headers: {\n      Authorization: isLogedIn ? `Bearer ${newInputInfo.token}` : undefined,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const postAxios = () => {\n    function dateFormat(date) {\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let hour = date.getHours();\n      let minute = date.getMinutes();\n      let second = date.getSeconds();\n\n      month = month >= 10 ? month : '0' + month;\n      day = day >= 10 ? day : '0' + day;\n      hour = hour >= 10 ? hour : '0' + hour;\n      minute = minute >= 10 ? minute : '0' + minute;\n      second = second >= 10 ? second : '0' + second;\n\n      return date.getFullYear() + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second +'.777Z';\n    }\n\n    // console.log(dateFormat(new Date()))\n    axios.put('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/posts/edit', { _id: board._id, content: editValue, updatedAt : dateFormat(new Date()) }, config)\n      .then(res => {\n        setEditable(!editable)\n        setUpdatedAt(res.data.updatedAt)\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  \n  const deleteAxios = () => {\n    axios.delete('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/posts/delete', {\n      ...config,\n      data: {_id : board._id} \n    })\n      .then(res => {\n        setCanUSeeMe(false)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n  \n  return <BoardWrap className={canUSeeMe ? '' : 'delete'}>\n      <ImgNickWrap><img src={board.user.image} alt=\"프로필 이미지\" />\n        <Nickname >{board.user.nickname}</Nickname>\n      </ImgNickWrap>\n      <ContentWrap>\n        {editable\n        ? <textarea type=\"text\" value={editValue} onChange={editValueHandler} maxLength={255}/>\n        : <Content>{editValue}</Content>}\n      </ContentWrap>\n      {isLogedIn && board.user._id === JSON.parse(localStorage.getItem('userInfo'))._id\n      ? <BtnWrap>\n          {editable\n          ? <button onClick={postAxios}><FaCheckCircle /></button>\n          : <button onClick={editHandler}><FaEdit size='22'/></button>\n        }\n        <button onClick={deleteAxios}><FaTrashAlt /></button>\n        </BtnWrap>\n      : null}\n      {!editable\n      ? <CreatedAt>\n        { board.createdAt === updatedAt \n        ? `작성일: ${year2}/${month2}/${day2.split('T')[0]} ${hour2}:${min2}`\n        : `수정일: ${year}/${month}/${day.split('T')[0]} ${hour}:${min}`}\n        </CreatedAt> \n      : null }\n  </BoardWrap>\n}\n\n\n// import { useState } from 'react';\n// import styled from 'styled-components';\n// import axios from 'axios';\n// import { FaFeatherAlt, FaTrashAlt, FaCheckCircle } from 'react-icons/fa';\n\n// const BoardWrap = styled.div`\n//   height: 16vh;\n//   margin: 2rem 2rem 0;\n//   padding: 1.5rem;\n//   text-align: left;\n//   align-items: center;\n//   background: #fff;\n//   /* border-radius: 0.4rem; */\n//   /* box-shadow: 0 0 0.4rem 0.2rem #eee; */\n//   border-bottom: 1px solid #eee;\n//   display: flex;\n//   flex-direction : row;\n//   position: relative;\n//   width: 60vw;\n//   padding-bottom: 4rem;\n//   padding-top: 2rem;\n\n\n//   &.delete {\n//     display: none;\n//   }\n  \n//   img {\n//     width: 5rem;\n//     height: 5rem;\n//     border: 1px solid #eee;\n//     border-radius: 50%;\n//   }\n\n//   textarea {\n//     height: 10vh;\n//     resize: none;\n//     margin-left: 1rem;\n//     padding: 0;\n//     border: 1px solid #EDC51E;\n//   }\n  \n//   textarea:focus {\n//     outline: 1px solid #EDC51E;\n//   }\n\n//   button {\n//     font-size: 1.2rem;\n//     color: #387099;\n//     margin-left: 1rem;\n//     background: none;\n//   }\n//   button:hover {\n//     color: #EDC51E;\n//   }\n// `\n// const ContentWrap = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   flex: 7;\n//   overflow: auto;\n//   word-wrap: break-word;\n//   /* margin-left: 1rem; */\n//   `\n// const BtnWrap = styled.div`\n//   position: absolute;\n//   top: 0rem;\n//   right: 5.2rem;\n// `\n// const Nickname = styled.div`\n//   height: 100%;\n//   /* margin: 0 1rem; */\n//   margin-top: 0.2rem;\n//   font-weight: bold;\n//   /* flex: 1 0 0; */\n//   text-align: center;\n// `\n// const Content = styled.div`\n//   height: 14vh;\n//   margin-left: 1rem;\n//   /* width: 20vw; */\n//   /* width: 300px; */\n//   /* margin: 50px auto; */\n//   background: #b42e24;\n//   padding: 1rem;\n//   text-align: center;\n//   font-weight: 900;\n//   color: #fff;\n//   font-family: arial;\n//   position:relative;\n//   margin-right: 3rem;\n//   border-radius: 0.5rem;\n//   margin-left: 2.3rem;\n\n//   &.sb1:before {\n//   content: \"\";\n//   width: 0px;\n//   height: 0px;\n//   position: absolute;\n//   border-left: 1rem solid transparent;\n//   border-right: 1rem solid #b42e24;\n//   border-top: 1rem solid #b42e24;\n//   border-bottom: 1rem solid transparent;\n//   left: -2rem;\n//   top: 2rem;\n//   /* border-top: solid 1px; */\n//   /* border-left: solid 1px; */\n// }\n// `\n// const CreatedAt = styled.div`\n//   font-size: 0.8rem;\n//   letter-spacing: 0.05rem;\n//   color: #444;\n//   position: absolute;\n//   bottom: 1rem;\n//   right: 1rem;\n// `\n\n// const ImgNickWrap = styled.div`\n//   flex: 1;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `\n\n// export default function Board({ isLogedIn, board }) {\n//   const [updatedAt, setUpdatedAt] = useState(board.updatedAt)\n//   const [editable, setEditable] = useState(false);\n//   const [editValue, setEditValue] = useState(board.content);\n//   const [canUSeeMe, setCanUSeeMe] = useState(true);\n//   //포스트 정보다 가져오기 API : /api/posts\n\n//   const [year, month, day] = updatedAt.split('-');\n//   const hour = day.split('T')[1].split(':')[0]\n//   const min = day.split('T')[1].split(':')[1]\n  \n//   const [year2, month2, day2] = board.createdAt.split('-');\n//   const hour2 = day2.split('T')[1].split(':')[0]\n//   const min2 = day2.split('T')[1].split(':')[1]\n\n//   const editHandler = () => {\n//     setEditable(!editable)\n//   }\n//   const editValueHandler = (e) => {\n//     setEditValue(e.target.value);\n//   }\n  \n//   const newInputInfo = JSON.parse(localStorage.getItem('userInfo'))\n\n//   const config = {\n//     headers: {\n//       Authorization: isLogedIn ? `Bearer ${newInputInfo.token}` : undefined,\n//       'Content-Type': 'application/json',\n//     },\n//   };\n\n//   const postAxios = () => {\n//     function dateFormat(date) {\n//       let month = date.getMonth() + 1;\n//       let day = date.getDate();\n//       let hour = date.getHours();\n//       let minute = date.getMinutes();\n//       let second = date.getSeconds();\n\n//       month = month >= 10 ? month : '0' + month;\n//       day = day >= 10 ? day : '0' + day;\n//       hour = hour >= 10 ? hour : '0' + hour;\n//       minute = minute >= 10 ? minute : '0' + minute;\n//       second = second >= 10 ? second : '0' + second;\n\n//       return date.getFullYear() + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second +'.777Z';\n//     }\n\n//     // console.log(dateFormat(new Date()))\n//     axios.put('http://localhost:3000/api/posts/edit', { _id: board._id, content: editValue, updatedAt : dateFormat(new Date()) }, config)\n//       .then(res => {\n//         setEditable(!editable)\n//         setUpdatedAt(res.data.updatedAt)\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       })\n//   }\n  \n//   const deleteAxios = () => {\n//     axios.delete('http://localhost:3000//api/posts/delete', {\n//       ...config,\n//       data: {_id : board._id} \n//     })\n//       .then(res => {\n//         setCanUSeeMe(false)\n//       })\n//       .catch(err => {\n//         console.log(err)\n//       })\n//   }\n  \n//   return <BoardWrap className={canUSeeMe ? '' : 'delete'}>\n//       <ImgNickWrap><img src={board.user.image} alt=\"프로필 이미지\" />\n//         <Nickname >{board.user.nickname}</Nickname>\n//       </ImgNickWrap>\n//       <ContentWrap>\n//         {editable\n//         ? <textarea type=\"text\" value={editValue} onChange={editValueHandler} maxLength={255}/>\n//         : <Content className='sb1'>{editValue}</Content>}\n//       </ContentWrap>\n//       {isLogedIn && board.user._id === JSON.parse(localStorage.getItem('userInfo'))._id\n//       ? <BtnWrap>\n//           {editable\n//           ? <button onClick={postAxios}><FaCheckCircle /></button>\n//           : <button onClick={editHandler}><FaFeatherAlt /></button>\n//         }\n//         <button onClick={deleteAxios}><FaTrashAlt /></button>\n//         </BtnWrap>\n//       : null}\n//       {!editable\n//       ? <CreatedAt>\n//         { board.createdAt === updatedAt \n//         ? `작성일: ${year2}/${month2}/${day2.split('T')[0]} ${hour2}:${min2}`\n//         : `수정일: ${year}/${month}/${day.split('T')[0]} ${hour}:${min}`}\n//         </CreatedAt> \n//       : null }\n//   </BoardWrap>\n// }","import styled from 'styled-components';\nimport Board from './Board';\nimport { Link } from 'react-router-dom';\n\nconst BoardListWrap = styled.div`\n  margin-top: 2rem;\n  background: #fff;\n  border-top: 1px solid #eee;\n  display: flex;\n  flex-direction: column-reverse;\n  /* border-bottom: 1px solid #eee; */\n\n  .list_none {\n    line-height: 80vh;\n    display: block;\n  }\n`;\n\nexport default function BoardList({ isLogedIn, boardListData }) {\n  return (\n    <BoardListWrap>\n      {boardListData.length\n      ? boardListData.map(board => {\n        return <Board key={board._id} isLogedIn={isLogedIn} board={board} />\n      })\n      : <Link to='/' className=\"list_none\">\n          <div>게시글이 존재하지 않습니다.</div>\n        </Link>}\n    </BoardListWrap>\n  );\n}\n","import Header from '../components/Header';\nimport BoardInput from '../components/BoardInput';\nimport BoardList from '../components/BoardList';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst BoardWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n    \nconst Main = ({ isLogedIn, isLogedInhandler }) => {\n  const [boardListData, setBoardListData] = useState([]);\n  \n  useEffect(() => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    axios\n      .get('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/posts', config)\n      .then((res) => {\n        setBoardListData([...res.data])\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return <>\n    <Header isLogedIn={isLogedIn} isLogedInhandler={isLogedInhandler} />\n    <BoardWrap>\n      <BoardInput isLogedIn={isLogedIn} setBoardListData={setBoardListData} />\n      <BoardList isLogedIn={isLogedIn} boardListData={boardListData} />\n    </BoardWrap>\n  </>\n}\n\nexport default Main;","import { useState } from 'react';\n// import { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport axios from 'axios';\nimport { FaTimes } from 'react-icons/fa';\n\nconst InfoWrap = styled.div`\n  >img {\n    width: 30vh;\n    height: 30vh;\n    border-radius: 50%;\n    border: 1px solid #eee;\n  }\n  >div {\n    margin-top: 0.2rem;\n    font-size: 1.4rem;\n    font-weight: bold;\n  }\n  >button {\n    margin: 0.5rem;\n    padding: 0.4rem 1rem;\n    color: #fff;\n    font-weight: bold;\n    background: #387099;\n    box-sizing: border-box;\n  }\n  >button:hover {\n    background: #EDC51E;\n  }\n`\nconst ContentWrap = styled.div`\n  height: 100%;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\nconst ContentBox = styled.div`\n  flex: 1 0 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  input {\n    padding: 0.2rem 0.5rem;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n  input:focus {\n    border: 1px solid #EDC51E;\n    outline: 1px solid #EDC51E;\n  }\n  >img {\n    width: 10vh;\n    height: 10vh;\n    margin-bottom: 1rem;\n    border-radius: 50%;\n    border: 3px solid #387099;\n  }\n\n  span {\n    margin-bottom: 0.4rem;\n    font-size: 0.9rem;\n    color: tomato;\n    /* margin-top: 0.4rem; */\n  }\n`\nconst ImgWrap = styled.div`\n  overflow: auto;\n  margin-bottom: 1.5rem;\n\n  img:hover {\n    border: 2px solid #EDC51E;\n  }\n\n`\nconst Img = styled.img`\n  width: 5rem;\n  height: 5rem;\n  margin: 0.5rem;\n  border-radius: 50%;\n  border:  2px solid #eee;\n`\nconst CloseBtn = styled.div`\n  font-size: 1.5rem;\n  position: absolute;\n  top: 0.3rem;\n  right: 1rem;\n  cursor: pointer;\n  \n  &:hover {\n    color: #EDC51E;\n  }\n`\nconst BtnWrap = styled.div`\n  display: flex;\n`\nconst ReSignBtn = styled.button`\n  flex: 1 0 0;\n  margin-left: 1rem;\n  padding: 0.4rem 0;\n  color: #ffffff;\n  font-weight: bold;\n  letter-spacing: 0.2rem;\n  background: #387099;\n  border: 0.2rem solid #387099;\n\n  &:hover {\n    color: #EDC51E;\n    background: #fff;\n    border: 0.2rem solid #EDC51E;\n  }\n  &:active {\n    color: red;\n    background: #fff;\n    border: 0.2rem solid red;\n  }\n`\nconst CancelBtn = styled.button`\n  flex: 1 0 0;\n  padding: 0.2rem 0;\n  color: #ffffff;\n  font-weight: bold;\n  letter-spacing: 0.2rem;\n  background: #888;\n  border: 0.2rem solid #888;\n\n  &:hover {\n    color: #888;\n    background: #fff;\n    border: 0.2rem solid #888;\n  }\n`\n\nconst IsValidNick = styled.div`\n  visibility: ${({visibility}) => visibility? 'hidden': 'visible'};\n  `\n\nconst IsValidNick2 = styled.div`\n  visibility: ${({visibility}) => visibility? 'visible': 'hidden'};\n`\n\n\nexport default function MypageInfo ({ isLogedInhandler }) {\n  const newInputInfo = JSON.parse(localStorage.getItem('userInfo'))\n  const [reSignIsOpen, setReSignIsOpen ] = useState(false);\n  const [editIsOpen, setEditIsOpen] = useState(false);\n  const [editNewNickname, setEditNewNickname] = useState('')\n  const [validNickname, setValidNickname] = useState(false)\n  const [isExistNickname, setIsExistNickname] = useState(false)\n  const [selectImg , setSelectImg] = useState(newInputInfo.image.split(\"/\")[3].split('.')[0])\n\n  // const history = useHistory()\n  \n  const reSignModalhandler = () => {\n    setReSignIsOpen(!reSignIsOpen)\n  }\n\n  const editModalhandler = () => {\n    setEditIsOpen(!editIsOpen)\n  }\n  \n  const editNewNicknameHandler = (e) => {\n    setEditNewNickname(e.target.value)\n    const nicknameExp = /^([a-zA-Z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣]).{1,10}$/;\n    \n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n      if (!nicknameExp.test(e.target.value)) {\n        setValidNickname(false)\n        //이 상태일떄는 유효성 검사를 통과하지 않았으므로 유효성 통과하라는 메시지를 띄워줘야함.\n      }\n      else {\n        //서버에 axios포스트로 중복되었는지 봐야됨.\n        axios.post('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/validate/nickname', { nickname : e.target.value}, config)\n        .then(res => {\n          setIsExistNickname(false)\n          setValidNickname(true)\n        })\n        .catch(err => {\n          setIsExistNickname(true)\n        })\n      }\n  }\n\n  const selectImgHanlder = (e) => {\n    setSelectImg(e.target.dataset.name)\n  }\n  \n  const reSignhandler = () => {\n    axios.delete('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/users/profile', {\n      headers: {\n        Authorization: `Bearer ${newInputInfo.token}`,\n        'Content-Type': 'application/json',\n      }}\n      )\n      .then(res => {\n        reSignModalhandler()\n        isLogedInhandler()\n        localStorage.removeItem('userInfo')\n      }).catch(err=> {\n        \n      })\n  }\n\n  const editUserInfoHandler = () => {\n    //setIsExistNickname (true))이거나 selectImg 상태 (true) 일때 아니면 둘다 true 일때 작동하게끔 해야됨.\n    \n    if(editNewNickname === '' && !isExistNickname && selectImg !== newInputInfo.image.split(\"/\")[3].split('.')[0]){\n      //이미지만 변경한 경우 닉네임 변경하지 않음.\n      axios.put('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/users/profile', \n      {\n        image : `/images/users/${selectImg}.jpeg`,\n        nickname : newInputInfo.nickname\n      }, {\n        headers: {\n          Authorization: `Bearer ${newInputInfo.token}`,\n          'Content-Type': 'application/json',\n        }\n      })\n      .then(res => {\n        // console.log(1)\n        // console.log(res.data)\n        setEditIsOpen(false)\n        //닉네임이랑 image가 찍혀있었음. 기존꺼 에서 닉네임하고 이미지만 바꿔서 저장해주면 됨.\n        localStorage.setItem('userInfo', JSON.stringify({...newInputInfo, image:res.data.image}))\n        window.location.reload()\n      })\n      .catch(err => {\n        \n      })\n    }\n    else if (editNewNickname !== '' && !isExistNickname && validNickname) {\n      axios.put('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/users/profile', \n      {\n        image : `/images/users/${selectImg}.jpeg`,\n        nickname : editNewNickname\n      }, {\n        headers: {\n          Authorization: `Bearer ${newInputInfo.token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(res => {\n        // console.log(2)\n        // console.log(res.data)\n        setEditIsOpen(false)\n        localStorage.setItem('userInfo', JSON.stringify({...newInputInfo, image:res.data.image, nickname: res.data.nickname}))\n        window.location.reload()\n      })\n    }\n  }\n\n  // Advanced: 회원정보수정 또는 탈퇴 클릭시 비밀번호 입력 후 진행하도록 플로우 수정\n  return <InfoWrap>\n    <img src={JSON.parse(localStorage.getItem('userInfo')).image} alt=\"유저이미지\"/>\n    <div>{JSON.parse(localStorage.getItem('userInfo')).nickname}</div>\n    \n{/************ 회원정보 수정 모달창 ************/}\n    { editIsOpen \n    ? <Modal isOpen={editIsOpen} onRequestClose={editModalhandler}  ariaHideApp={false} contentLabel=\"Selected Option\"\n    style={{\n      overlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        backgroundColor: 'rgba(255, 255, 255, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      content: {\n        width: '50vw',\n        height: '50vh',\n        border: '1px solid #ccc',\n        background: '#fff',\n        overflow: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        borderRadius: '4px',\n        outline: 'none',\n        padding: '0',\n        position: 'relative',\n        inset: '0'\n      }\n    }}>\n      <CloseBtn onClick={editModalhandler}><FaTimes /></CloseBtn>\n      <ContentWrap>\n        {/* 이미지 */}\n        <ContentBox>\n          <ImgWrap>\n            {Array(8).fill().map((v,i) => i+1).map((el) => {\n              return <Img src={`/images/users/${el}.jpeg`} alt=\"프로필 이미지\" key={el} data-name={el} onClick={selectImgHanlder}/>\n            })}\n          </ImgWrap>\n          {/* input */}\n          <img src={`/images/users/${selectImg}.jpeg`} alt=\"프로필 이미지\" />\n          <input type=\"nickname\" placeholder=\"Edit New Nickname\" value={editNewNickname} onChange={editNewNicknameHandler}/>\n          {/* { editNewNickname === '' || validNickname  ? null : <span>닉네임은 공백제외 2글자 이상 10글자 이하여야 합니다.</span> } */}\n          <IsValidNick  visibility={editNewNickname === '' || validNickname ? 1 : 0}><span>닉네임은 공백제외 2글자 이상 10글자 이하여야 합니다.</span></IsValidNick>\n          {/* { isExistNickname ? <span>중복된 닉네임입니다.</span> : null} */}\n          <IsValidNick2 visibility={isExistNickname ? 1 : 0}><span>중복된 닉네임입니다.</span></IsValidNick2>\n        </ContentBox>\n        <BtnWrap>\n          <CancelBtn onClick={editModalhandler}>Cancle</CancelBtn>\n          <ReSignBtn onClick={editUserInfoHandler} >OK</ReSignBtn>\n        </BtnWrap>\n      </ContentWrap>\n    </Modal>\n  : <button onClick={editModalhandler}>정보수정</button>\n    }\n    \n{/************ 탈퇴 요청 모달창 ************/}\n    { reSignIsOpen \n    ? <Modal isOpen={reSignIsOpen} onRequestClose={reSignModalhandler}  ariaHideApp={false} contentLabel=\"Selected Option\"\n      style={{\n        overlay: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          backgroundColor: 'rgba(255, 255, 255, 0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        content: {\n          width: '40vw',\n          height: '30vh',\n          border: '1px solid #ccc',\n          background: '#fff',\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          borderRadius: '4px',\n          outline: 'none',\n          padding: '0',\n          position: 'relative',\n          inset: '0'\n        }\n      }}>\n        <CloseBtn onClick={reSignModalhandler}><FaTimes /></CloseBtn>\n        <ContentWrap>\n          <ContentBox><span>탈퇴 시 게시글도 모두 삭제됩니다.<br />탈퇴하시겠습니까?</span></ContentBox>\n          <BtnWrap>\n            <CancelBtn onClick={reSignModalhandler}>Cancel</CancelBtn>\n            <ReSignBtn onClick={reSignhandler}>ReSign</ReSignBtn>\n          </BtnWrap>\n        </ContentWrap>\n      </Modal>\n    : <button onClick={reSignModalhandler}>회원탈퇴</button> }\n  </InfoWrap>\n};\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport MypageInfo from '../components/MypageInfo';\nimport BoardList from '../components/BoardList';\nimport styled from 'styled-components';\n\n\nconst BoardListWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Mypage = ({ isLogedIn, isLogedInhandler }) => {\n  //마이페이지에 처음 들어오면 서버에 get요청을 보내서 내 정보와 내가쓴글을 다 받아와야함.\n  const [myBoardListData, setMyBoardListData] = useState([]);\n  \n  useEffect(() => {\n    const newInputInfo = JSON.parse(localStorage.getItem('userInfo'))\n    \n    const config = {\n      headers: {\n        authorization: isLogedIn ? `Bearer ${newInputInfo.token}` : undefined,\n        'Content-Type': 'application/json',\n      }\n    };\n  \n    if(isLogedIn && config.headers.authorization){\n      axios\n        .get('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/posts/mine', config) \n        .then((res) => {\n          setMyBoardListData([...res.data])\n        })\n        .catch((err) => {\n          console.log('에러났다', err);\n        });\n    }\n  }, [isLogedIn])\n\n  return <>\n    <Header isLogedIn={isLogedIn} isLogedInhandler={isLogedInhandler} /> \n    {isLogedIn \n    ? <div>\n        <MypageInfo isLogedInhandler={isLogedInhandler} />\n        <BoardListWrap>\n          <BoardList isLogedIn={isLogedIn} boardListData={myBoardListData} />\n        </BoardListWrap>\n      </div>\n    : <>\n        <Link to='/signin' ><img src={'/images/users/loginplz.png'} alt=\"로그인 한 이후에 mypage로 와주세요\"></img></Link>\n        <div>로그인 후 이용가능합니다.</div>\n      </>\n    }\n    \n  </>\n}\n\nexport default Mypage;","// import { useState } from 'react'; \nimport styled from 'styled-components';\n\nconst InputWrap = styled.div`\n  display: flex;\n  flex-direction : column;\n  text-align: left;\n  color : #808080;\n\n  input {\n    margin: 0.2rem 0 0.5rem;\n    padding: 0.4rem 0.5rem;\n    border: 1px solid #e6e6e6;\n  }\n  input:focus {\n    outline: 1px solid #EDC51E;\n  }\n  input::placeholder {\n    color :  #cccccc;\n    font-style: italic;\n  }\n  \n  b {\n    border-bottom: 1px solid #EDC51E;\n  }\n`\n\nconst SignInInput = ({signInInputInfo, setSignInInputInfo}) => {\n  // TODO: 서버에 signin 요청 후 잘못됐을때 ValidText 표출 및 input outline 붉은색으로 변경\n  \n  const InputuserInfo = (e) => {\n    if (e.target.type === 'email') {\n      setSignInInputInfo({ email: e.target.value, password: signInInputInfo.password })\n    } else {\n      setSignInInputInfo({ email: signInInputInfo.email, password: e.target.value })\n    }\n  }\n\n  return (\n    <InputWrap>\n      <label htmlFor=\"clickid\">Email</label>\n      <input id=\"clickid\" type=\"email\" placeholder=\"email\" value={signInInputInfo.email} onChange={InputuserInfo} />\n      <label htmlFor=\"clickpwd\">Password</label>\n      <input id=\"clickpwd\" type=\"password\" placeholder=\"password\" value={signInInputInfo.password} onChange={InputuserInfo}/>\n    </InputWrap>\n  )\n}\n\nexport default SignInInput;","export default __webpack_public_path__ + \"static/media/Logo.3acbe251.svg\";","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst BtnWrap = styled.div`\n  margin-top: 1.5rem;\n  display: flex;\n`\nconst SignInBtn = styled.button`\n  flex: 1 0 0;\n  margin-left: 0.5rem;\n  padding: 0.5rem 0;\n  font-weight: bold;\n  color: #fff;\n  background-color: #387099;\n  \n  &:hover {\n    background-color: #EDC51E;\n  }\n`\nconst SignUpBtn = styled.button`\n  flex: 1 0 0;\n  margin-right: 0.5rem;\n  padding: 0 0 0 0;\n  font-weight: bold;\n\n  &:hover {\n    background-color: #4D2C21;\n    color: #fff;\n  }\n  > a:hover {\n    color: #fff;\n  }\n  > a {\n    height: 40px;\n    padding-top: 8px;\n\n  }\n`\nconst ValidText = styled.div`\n  margin: 0 0 0.2rem 0.2rem;\n  font-size: 0.8rem;\n  color: #387099;\n  display: none;\n\n  &.valid {\n    display: block;\n  }\n`\n\nconst SignInButton = ({ signInInputInfo, setSignInInputInfo, isLogedIn, isLogedInhandler }) => {\n  // signin 버튼을 클릭하면, 현재 가지고있는 inputInfo를 가지고 서버에게 axios post 요청\n  // TODO: inputInfo id, password 유효성검사해서 버튼 눌려도 axios 요청 안가고 바로 문구 표출\n  // TODO: input 유효성 검사 \n  // id: 이메일 형식이어야 함.\n  // password: 최소 8자 이상 20자 이하, 알파벳(대소문자 구분 x)과 숫자 및 특수문자(@$!%*#?&)는 하나 이상 포함해야 합니다\n  // id 유효, password 유효 => axios 요청 => 결과 반환\n\n  /*첫번째 고려사항 \n  만약 일치하는 유저가 있고 비밀번호도 잘 적었다면 \n  isLogedIn상태를 true로 바꾸어줌 (이때 isLogedInhandler를 실행 시키면 false를 true로 변경) \n  */\n\n  /*두번째 고려사항\n  만약 일치하는 유저가 없거나 비밀번호를 잘못 적는다면\n  isLogedIn상태는 그대로 true이며 에러메시지를 써줘야함.\n  */\n  // useEffect(() => {\n  //   console.log(isLogedIn)\n  // }, [isLogedIn])\n\n  const [displayValidText, setDisplayValidText] = useState(false);\n  const history = useHistory();\n\n  const validcheck = () => {\n    let idExp = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]+$/;\n    let pwdExp = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,20}$/;\n\n    if (idExp.test(signInInputInfo.email) && pwdExp.test(signInInputInfo.password)) {\n      axios.post('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/users/login', { email: signInInputInfo.email, password: signInInputInfo.password })\n        .then((res) => {\n          const userInfo = res.data // 서버에서 받아온 유저정보\n          // localStorge 데이터 저장\n          localStorage.setItem('userInfo', JSON.stringify(userInfo))\n          isLogedInhandler()\n          setSignInInputInfo({ email: '', password: '' })\n          history.replace('/')  // token \n        }).catch(err => {\n          console.log(err)\n          setDisplayValidText(true)\n        })\n    }\n    else {\n      setDisplayValidText(true)\n    }\n  }\n\n  return <>\n    <ValidText className={displayValidText ? \"valid\" : \"\"}>&#42;아이디 또는 비밀번호가 잘못 입력 되었습니다.<br /><b>아이디</b>와 <b>비밀번호</b>를 정확히 입력해 주세요.</ValidText>\n    <BtnWrap>\n      <SignUpBtn><Link to='/signup'>Sign Up</Link></SignUpBtn>\n      <SignInBtn onClick={validcheck}>Sign In</SignInBtn>\n    </BtnWrap>\n  </>\n}\n\nexport default SignInButton;\n\n","import { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components'\nimport SignInInput from '../components/Signin/SignInInput';\nimport Logo from '../assets/images/Logo.svg';\nimport SignInButton from '../components/Signin/SignInButton';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst SigninContainer = styled.div`\n  height: 100vh;\n  background: #EFF1F1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url('/images/lego.jpg');\n`\nconst LogoImg = styled.img`\n  width: 12vh;\n  margin-bottom: 1.5rem;\n`\nconst SigninWrap = styled.div`\n  width: 50vh;\n  padding: 2rem;\n  border-radius: 0.8rem;\n  background: #ffffff;\n  position: relative;\n`\nconst PrevBtn = styled.div`\n  font-size: 1.2rem;\n  position: absolute;\n  top: 1.2rem;\n  left: 2rem;\n`\n\nconst Signin = ({isLogedIn,  isLogedInhandler}) => {\n  const [signInInputInfo, setSignInInputInfo] = useState({ email: '', password: '' });\n  \n  return <SigninContainer>\n    <SigninWrap>\n      <PrevBtn><Link to='/'><FaArrowLeft/></Link></PrevBtn>\n      <LogoImg src={Logo} alt=\"Logo\" />\n      <SignInInput signInInputInfo={signInInputInfo} setSignInInputInfo={setSignInInputInfo}/>\n      <SignInButton signInInputInfo={signInInputInfo} isLogedIn={isLogedIn}  isLogedInhandler={isLogedInhandler} setSignInInputInfo={setSignInInputInfo}/>\n    </SigninWrap>\n  </SigninContainer>\n}\n// \nexport default Signin;","import { useState, useEffect } from 'react'; \nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst InputWrap = styled.div`\n  display: flex;\n  flex-direction : column;\n  text-align: left;\n  color : #808080;\n  \n  input {\n    margin: 0.2rem 0 0.5rem;\n    padding: 0.4rem 0.5rem;\n    border: 1px solid #e6e6e6;\n  }\n  input:focus {\n    outline: 1px solid #EDC51E;\n  }\n  input::placeholder {\n    color :  #cccccc;\n    font-style: italic;\n  }\n  \n  b {\n    border-bottom: 1px solid #EDC51E;\n  }\n  span {\n    margin-bottom: 0.4rem;\n    font-size: 0.9rem;\n    color: tomato;\n  }\n  `\n                //우리가 입력한 값 (보낼값)               //개별 유효성 체크(boolean)\nconst SignUpInput = ({signUpInputInfo, setSignUpInputInfo, signUpValid, setSignUpValid}) => {\n  \n  \n  // TODO: 서버에 signin 요청 후 잘못됐을때 ValidText 표출 및 input outline 붉은색으로 변경\n  // const [signUpValid, setSignUpValid] = useState({id: false, password: false, passwordCheck: false, nickname: false});  참고용 \n  const pwdExp = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,20}$/;\n  let emailExp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  let nicknameExp = /^([a-zA-Z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣]).{1,10}$/;\n  \n  const [checkEmailDupli, setCheckEmailDupli] = useState(true)\n  const [checkNickNameDupli, setCheckNickNameDupli] = useState(true)\n\n  useEffect(() => {\n    let emailExp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let nicknameExp = /^([a-zA-Z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣]).{1,10}$/;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    //email 검증 useEffect\n    if (emailExp.test(signUpInputInfo.email)) {\n      axios.post('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/validate/email', { email : signUpInputInfo.email }, config)\n        .then(res => { \n          //가입가능한 이메일이니 이것도 문구하나 띄워야됨\n          setCheckEmailDupli(true)\n          console.log(\"2\") \n        })\n        .catch(err => {\n          //중복된 이메일이니 문구하나 띄워야됨.\n          setCheckEmailDupli(false)\n          console.log(\"1\")\n        })\n    }\n\n    //nickname 검증 useEffect\n    if(nicknameExp.test(signUpInputInfo.nickname)){\n      axios.post( 'http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/validate/nickname', { nickname : signUpInputInfo.nickname}, config)\n      .then(res => {\n        //사용 가능한 닉네임이니 문구하나 띄우기\n        setCheckNickNameDupli(true)\n        console.log(res)\n      })\n      .catch(err => {\n        //중복된 닉네임이니 문구하나 띄우기\n        setCheckNickNameDupli(false)\n      })\n    }\n\n  }, [signUpInputInfo])\n  \n  const validEmail = (e) => {\n    setSignUpInputInfo({ ...signUpInputInfo, email: e.target.value })\n    if (!emailExp.test(signUpInputInfo.email))\n      setSignUpValid({ ...signUpValid, email: false })\n    else {\n      setSignUpValid({ ...signUpValid, email: true })\n    }\n  }\n\n\n  const validPassword = (e) => {\n    \n    setSignUpInputInfo({...signUpInputInfo, password: e.target.value})\n    \n    if (!pwdExp.test(e.target.value))\n      setSignUpValid({...signUpValid, password: false})\n    else\n      setSignUpValid({...signUpValid, password: true})\n  }\n\n  const validPasswordCheck = (e) => {\n    setSignUpInputInfo({...signUpInputInfo, passwordCheck: e.target.value})\n\n    if (e.target.value === signUpInputInfo.password)\n      setSignUpValid({...signUpValid, passwordCheck: true})\n    else\n      setSignUpValid({...signUpValid, passwordCheck: false})\n  }\n\n  const validNickName = (e) => {\n    setSignUpInputInfo({...signUpInputInfo, nickname: e.target.value})\n\n    if (!nicknameExp.test(e.target.value))\n      setSignUpValid({...signUpValid, nickname: false})\n    else\n      setSignUpValid({...signUpValid, nickname: true})\n  }\n\n  return (\n    <InputWrap>\n      {/* ADVENCED: 서버랑 통신해서 받아온걸 업데이트 해줄 상태 생성 => 결과에 따라 문구 표출 */}\n      <label htmlFor=\"clickemail\">Email</label>\n      <input id=\"clickemail\" type=\"email\" placeholder=\"email\" value={signUpInputInfo.email} onChange={validEmail}/>\n      { signUpInputInfo.email === '' || signUpValid.email ?  null : <span>올바른 이메일 형식이 아닙니다.</span> }\n      {checkEmailDupli ? null : <span>이미 사용중인 이메일 주소 입니다.</span>}\n\n      <label htmlFor=\"clickpwd2\">Password</label>\n      <input id=\"clickpwd2\" type=\"password\" placeholder=\"password\" value={signUpInputInfo.password} onChange={validPassword}/>\n      { signUpInputInfo.password === '' || signUpValid.password ? null : <span>알파벳, 숫자, 특수문자를 포함하여 8~20글자를 입력해주세요.</span> }\n      \n      <label htmlFor=\"clickpwdcheck\">Password Check</label>\n      <input id=\"clickpwdcheck\" type=\"password\" placeholder=\"password Check\" value={signUpInputInfo.passwordCheck} onChange={validPasswordCheck}/>\n      { signUpInputInfo.passwordCheck === '' || signUpValid.passwordCheck ? null : <span>비밀번호와 일치하지 않습니다.</span> }\n\n      <label htmlFor=\"clicknickname\">Nickname</label>\n      <input id=\"clicknickname\" type=\"nickname\" placeholder=\"nickname\" value={signUpInputInfo.nickname} onChange={validNickName}/>\n      { signUpInputInfo.nickname === '' || signUpValid.nickname  ? null : <span>닉네임은 공백제외 2글자 이상 10글자 이하여야 합니다.</span> }\n      {checkNickNameDupli ? null : <span>이미 사용중인 닉네임 입니다.</span>}\n    </InputWrap>\n  )\n}\n\nexport default SignUpInput;","// import { useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst BtnWrap = styled.div`\n  margin-top: 1.5rem;\n  display: flex;\n`\nconst SignUpBtn = styled.button`\n  flex: 1 0 0;\n  padding: 0.5rem 0;\n  font-weight: bold;\n  color: #fff;\n  background-color: #387099;\n  \n  &:hover {\n    background-color: #EDC51E;\n  }\n`\n\nconst SignUpButton = ({ signUpInputInfo, signUpAllCheck }) => {\n  // const { email, password, nickname } = req.body;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  // console.log(signUpInputInfo)\n\n  const history = useHistory();\n\n  const signUpReqHandler = () => {\n    const { password, nickname } = signUpInputInfo\n    const payload = { email: signUpInputInfo.email, password, nickname }\n\n    if (signUpAllCheck) {\n      axios.post('http://ec2-3-37-98-188.ap-northeast-2.compute.amazonaws.com/api/users', {\n        ...payload\n      }, config)\n        .then(res => {\n          // 회원가입 후 로그인 페이지로 갱신\n          history.replace('/signin')\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\n  return <>\n    <BtnWrap>\n      <SignUpBtn onClick={signUpReqHandler}>Sign Up</SignUpBtn>\n    </BtnWrap>\n  </>\n}\n\nexport default SignUpButton;","import { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components'\nimport SignUpInput from '../components/Signup/SignUpInput';\nimport Logo from '../assets/images/Logo.svg';\nimport SignUpButton from '../components/Signup/SignUpButton';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst SignupContainer = styled.div`\n  height: 100vh;\n  background: #EFF1F1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url('/images/lego.jpg');\n`\nconst SignupWrap = styled.div`\n  width: 50vh;\n  padding: 2rem;\n  border-radius: 0.8rem;\n  background: #ffffff;\n  position: relative;\n`\n\nconst LogoImg = styled.img`\n  width: 12vh;\n  margin-bottom: 1.5rem;\n`\n\nconst PrevBtn = styled.div`\n  font-size: 1.2rem;\n  position: absolute;\n  top: 1.2rem;\n  left: 2rem;\n  `\n\nconst Signup = () => {\n  const [signUpInputInfo, setSignUpInputInfo] = useState({ email: '', password: '', passwordCheck: '', nickname: '' });\n  const [signUpValid, setSignUpValid] = useState({ email: false, password: false, passwordCheck: false, nickname: false });\n  const [signUpAllCheck, setSignUpAllCheck] = useState(false); // useEffect로 변경\n  // useEffect로 signUpValid 감시 => 다 트루면 변경 => 버튼으로 내려주기\n\n  useEffect(() => {\n    // console.log(Object.entries(signUpValid).flat().every(el=> el))\n    //signUpvalid가 변경될떄마다, 체크하고 만약 signUpvalid의 모든 value값이 true가 될 경우 signUpAllCheck를 트루를 바꿔야됨. \n    // if(Object.entries(signUpValid).every()) {  // [[],[],[],[]]\n    if(Object.entries(signUpValid).flat().every(el=> el)){\n      setSignUpAllCheck(true)\n    }\n    else {\n      setSignUpAllCheck(false)\n    }\n  },[signUpValid])\n  \n  return <SignupContainer>\n    <SignupWrap>\n    <PrevBtn><Link to='/signin'><FaArrowLeft/></Link></PrevBtn>\n      <LogoImg src={Logo} alt=\"Logo\" />\n      <SignUpInput signUpInputInfo={signUpInputInfo} setSignUpInputInfo={setSignUpInputInfo} signUpValid={signUpValid} setSignUpValid={setSignUpValid} />\n      <SignUpButton signUpInputInfo={signUpInputInfo} signUpAllCheck={signUpAllCheck} />\n    </SignupWrap>\n  </SignupContainer>\n}\n\nexport default Signup;","import styled from 'styled-components';\n\nconst FooterWrap = styled.footer`\n  padding: 1rem 0;\n`\nexport default function Footer() {\n  return <FooterWrap>\n    Copyright &copy; 2021년산 미니마니모 with Melting Brain KOREA, Inc. All rights reserved.\n  </FooterWrap>\n}","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Main from './page/Main';\nimport Mypage from './page/Mypage';\nimport Signin from './page/Signin';\nimport Signup from './page/Signup';\nimport { useEffect, useState } from 'react';\n\nimport Footer from './components/Footer'\n\n\nconst App = () => {\n  //로그인 상태관리 여기서 하기\n  const [isLogedIn, setIsLogedIn] = useState(false); // false인데 우측상단 드랍다운 메뉴 안떠서 true로 변경함\n  \n  // const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    if (localStorage.getItem('userInfo')) {\n      setIsLogedIn(true)\n    } else {\n      setIsLogedIn(false)\n    }\n  }, [])\n\n  //로그인 상태 변경해줄 함수\n  const isLogedInhandler = () => {\n    setIsLogedIn(!isLogedIn)\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/'>\n          <Main isLogedIn={isLogedIn} isLogedInhandler={isLogedInhandler} />\n        </Route>\n        <Route path='/signin'>\n          <Signin isLogedIn={isLogedIn} isLogedInhandler={isLogedInhandler} />\n        </Route>\n        <Route path='/signup'>\n          <Signup />\n        </Route>\n        <Route path='/mypage'>\n          <Mypage isLogedIn={isLogedIn} isLogedInhandler={isLogedInhandler} />\n        </Route>\n      </Switch>\n        <Footer/>\n    </BrowserRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {console.log(\"                                                                        ,,\\n\\\n                                                                       /  ,\\n\\\n                                                                      /   /\\n\\\n                                                                     /   /\\n\\\n                                                                    /   /\\n\\\n    __________________________                                     /   /\\n\\\n    ⎢                         ⎥                                   /   /\\n\\\n    ⎢  혹시 내가 보여? 난 고양이야  ⎥                                  /   /\\n\\\n    ⎢____    _________________⎥                                 /   /\\n\\\n          \\\\/    ,      ,,                                      /   /\\n\\\n               /%c@%c\\\\____/%c@%c \\\\                                ____/   /\\n\\\n              /           \\\\                         _____/        /__\\n\\\n        /\\\" \\\\ / •    •      \\\\                     __/             /  %c@@%c\\\"\\\\\\n\\\n        \\\\    %c@@%c  ㅅ  %c@@%c     /___             ___/                /    _/\\n\\\n      /\\\" \\\\   \\\\                 \\\\__________/                    |__/ \\\"\\\\\\n\\\n      \\\\   \\\\                                                   /      /\\n\\\n       \\\\    \\\\  __                                                  _/\\n\\\n        \\\\                                                       __/\\n\\\n          \\\\_                                             ______/\\n\\\n             \\\\ ___                                     _/\\n\\\n                    \\\\__                             __/\\n\\\n                        \\\\_____                _____/\\n\\\n                              \\\\______________/\\n\\\n          \\n\", 'color:#ff6905','color:white','color:#ff6905','color:white','color:#ff6905','color:white','color:#ff6905','color:white','color:#ff6905','color:white')}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//     {console.log(\"                                                                        ,,\\n\\\n//                                                                        /  ,\\n\\\n//                                                                       /   /\\n\\\n//                                                                      /   /\\n\\\n//                                                                     /   /\\n\\\n//     __________________________                                     /   /\\n\\\n//     ⎢                         ⎥                                   /   /\\n\\\n//     ⎢  혹시 내가 보여? 난 고양이야  ⎥                                  /   /\\n\\\n//     ⎢____    _________________⎥                                 /   /\\n\\\n//           \\\\/    ,      ,,                                      /   /\\n\\\n//                /@\\\\____/@ \\\\                                ____/   /\\n\\\n//               /           \\\\                         _____/        /__\\n\\\n//         /\\\" \\\\ / •    •      \\\\                     __/             /  @@\\\"\\\\\\n\\\n//         \\\\    @@  ㅅ  @@     /___             ___/                /    _/\\n\\\n//       /\\\" \\\\   \\\\                 \\\\__________/                    |__/ \\\"\\\\\\n\\\n//       \\\\   \\\\                                                   /      /\\n\\\n//        \\\\    \\\\  __                                                  _/\\n\\\n//         \\\\                                                       __/\\n\\\n//           \\\\_                                             ______/\\n\\\n//              \\\\ ___                                     _/\\n\\\n//                     \\\\__                             __/\\n\\\n//                         \\\\_____                _____/\\n\\\n//                               \\\\______________/\\n\\\n//           \\n\")}\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );"],"sourceRoot":""}